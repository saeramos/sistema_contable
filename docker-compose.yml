version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: contabilidad-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: contabilidad
      MYSQL_USER: contabilidad
      MYSQL_PASSWORD: password
      TZ: America/Bogota
      LANG: es_CO.UTF-8
      MYSQL_INITDB_CHARSET: utf8mb4
      MYSQL_INITDB_COLLATION: utf8mb4_unicode_ci
    command: >
      --character-set-server=utf8mb4 
      --collation-server=utf8mb4_unicode_ci
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=256M
      --innodb-log-file-size=64M
      --max-connections=200
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - contabilidad-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-ppassword"]
      timeout: 20s
      retries: 10
      start_period: 30s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Spring Boot Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        - JAVA_OPTS=-Xms512m -Xmx1024m -XX:+UseG1GC
    container_name: contabilidad-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/contabilidad?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true&characterEncoding=UTF-8&useUnicode=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      JAVA_OPTS: -Xms512m -Xmx1024m -XX:+UseG1GC -XX:+UseContainerSupport
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - contabilidad-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # React Frontend (Nginx)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: contabilidad-frontend
    environment:
      REACT_APP_API_URL: http://localhost:8080/api
      NODE_ENV: production
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - contabilidad-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      timeout: 10s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  mysql_data:
    driver: local

networks:
  contabilidad-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 